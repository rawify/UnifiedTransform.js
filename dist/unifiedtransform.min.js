/*
UnifiedTransform v0.1.1 10/5/2024
https://github.com/rawify/UnifiedTransform.js

Copyright (c) 2024, Robert Eisele (https://raw.org/)
Licensed under the MIT license.
*/
'use strict';(function(p){const e=2*Math.PI;class q{constructor(){this.i=[1,0,0,1,0,0]}g(b,c){this.h([1,0,0,1,parseFloat(String(b).replace("px",""))||0,parseFloat(String(c).replace("px",""))||0])}l(b,c=null){null===c&&(c=b);this.h([parseFloat(b)||1,0,0,parseFloat(c)||1,0,0])}j(b,c,d){"string"==typeof b?-1!==b.indexOf("rad")?(b=b.replace("rad",""),b=parseFloat(b)):(b=b.replace("deg",""),b=parseFloat(b)/360*e):b=b/360*e;let a=Math.cos(b);b=Math.sin(b);void 0!==c&&this.g(c,d||0);this.h([a,b,-b,a,0,0]);
void 0!==c&&this.g(-c,-(d||0))}m(b){this.h([1,0,Math.tan(parseFloat(b)/360*e),1,0,0])}o(b){this.h([1,Math.tan(parseFloat(b)/360*e),0,1,0,0])}h(b){let [c,d,a,f,r,t]=this.i,[g,h,k,l,m,n]=b.map(parseFloat);this.i=[c*g+a*h,d*g+f*h,c*k+a*l,d*k+f*l,c*m+a*n+r,d*m+f*n+t]}transform(b){for(let c of[...b.matchAll(/(matrix|translate|translateX|translateY|scale|rotate|skewX|skewY)\s*\(([^)]+)\)/g)]){let [,d,a]=c;a=a.trim().split(/[\s,]+/);switch(d){case "matrix":6===a.length&&this.h(a);break;case "translate":1===
a.length?this.g(a[0],0):2===a.length&&this.g(a[0],a[1]);break;case "translateX":this.g(a[0],0);break;case "translateY":this.g(0,a[0]);break;case "scale":1===a.length?this.l(a[0],a[0]):2===a.length&&this.l(a[0],a[1]);break;case "rotate":1===a.length?this.j(a[0],0,0):3===a.length&&this.j(a[0],a[1],a[2]);break;case "skewX":1===a.length&&this.m(a[0]);break;case "skewY":1===a.length&&this.o(a[0])}}return this}}p.UnifiedTransform=q})(this);
