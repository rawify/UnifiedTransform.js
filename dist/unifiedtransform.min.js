/*
UnifiedTransform v0.4.0 11/3/2024
https://github.com/rawify/UnifiedTransform.js

Copyright (c) 2024, Robert Eisele (https://raw.org/)
Licensed under the MIT license.
*/
'use strict';(function(t){function e(){this.matrix=[1,0,0,1,0,0]}const r=2*Math.PI;e.prototype={translate:function(a,c){return this.applyMatrix([1,0,0,1,parseFloat(String(a).replace("px",""))||0,parseFloat(String(c).replace("px",""))||0])},scale:function(a,c=null){null===c&&(c=a);return this.applyMatrix([parseFloat(a)||1,0,0,parseFloat(c)||1,0,0])},rotate:function(a,c,d){"string"==typeof a?-1!==a.indexOf("rad")?(a=a.replace("rad",""),a=parseFloat(a)):(a=a.replace("deg",""),a=parseFloat(a)/360*r):
a=a/360*r;let b=Math.cos(a);a=Math.sin(a);void 0!==c&&this.translate(c,d||0);this.applyMatrix([b,a,-a,b,0,0]);return void 0!==c?this.translate(-c,-(d||0)):this},skewX:function(a){return this.applyMatrix([1,0,Math.tan(parseFloat(a)/360*r),1,0,0])},skewY:function(a){return this.applyMatrix([1,Math.tan(parseFloat(a)/360*r),0,1,0,0])},applyMatrix:function(a,c="CSS"){let [d,b,f,g,h,u]=this.matrix,k,l,m,n,p,q;"CSS"===c?[k,l,m,n,p,q]=a.map(parseFloat):"2D"===c?[[k,m,p],[l,n,q]]=a.map(v=>v.map(parseFloat)):
[k,m,p,l,n,q]=a.map(parseFloat);this.matrix=[d*k+f*l,b*k+g*l,d*m+f*n,b*m+g*n,d*p+f*q+h,b*p+g*q+u];return this},transform:function(a){for(let c of[...a.matchAll(/(matrix|translate|translateX|translateY|scale|rotate|skewX|skewY)\s*\(([^)]+)\)/g)]){let [,d,b]=c;b=b.trim().split(/[\s,]+/);switch(d){case "matrix":6===b.length&&this.applyMatrix(b);break;case "translate":1===b.length?this.translate(b[0],0):2===b.length&&this.translate(b[0],b[1]);break;case "translateX":this.translate(b[0],0);break;case "translateY":this.translate(0,
b[0]);break;case "scale":1===b.length?this.scale(b[0],b[0]):2===b.length&&this.scale(b[0],b[1]);break;case "rotate":1===b.length?this.rotate(b[0],0,0):3===b.length&&this.rotate(b[0],b[1],b[2]);break;case "skewX":1===b.length&&this.skewX(b[0]);break;case "skewY":1===b.length&&this.skewY(b[0])}}return this},eval:function(a,c){const d=this.matrix;return[a*d[0]+c*d[2]+d[4],a*d[1]+c*d[3]+d[5]]},toMatrix:function(a="flat"){const [c,d,b,f,g,h]=this.matrix;return"CSS"===a?[c,d,b,f,g,h]:"2D"===a?[[c,b,g],
[d,f,h],[0,0,1]]:[c,b,g,d,f,h,0,0,1]},toTransformString:function(){return"matrix("+this.matrix.join(", ")+")"}};"function"===typeof define&&define.amd?define([],function(){return e}):"object"===typeof exports?(Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=e,e.UnifiedTransform=e,module.exports=e):t.UnifiedTransform=e})(this);
